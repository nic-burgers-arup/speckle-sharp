<Window x:Class="ConnectorGSA.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
				xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
				xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
				xmlns:local="clr-namespace:ConnectorGSA.ViewModels" 
				xmlns:localUtilities="clr-namespace:ConnectorGSA.Utilities"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:controls="clr-namespace:MaterialDesignExtensions.Controls;assembly=MaterialDesignExtensions"
				TextElement.Foreground="{DynamicResource MaterialDesignBody}"
				TextElement.FontWeight="Regular"
				TextElement.FontSize="13"
				TextOptions.TextFormattingMode="Ideal"
				TextOptions.TextRenderingMode="Auto"
				Background="{DynamicResource MaterialDesignPaper}"
				FontFamily="{DynamicResource MaterialDesignFont}"
				DataContext="{StaticResource MainWindowViewModel}"
        mc:Ignorable="d" FontSize="13" WindowStartupLocation="CenterScreen"
        Title="{Binding Title}" Height="774" Width="740" IsEnabled="{Binding MainWindowEnabled, Mode=OneWay}" Icon="/ConnectorGSA;component/icon.ico">
	<Window.Resources>
		<localUtilities:EnumConverter x:Key="EnumConverter" />
	</Window.Resources>
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Loaded">
			<i:InvokeCommandAction Command="{Binding InitialLoadCommand}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="10" />
			<ColumnDefinition Width="auto" />
			<ColumnDefinition Width="*" />
			<ColumnDefinition Width="auto" />
			<ColumnDefinition Width="10" />
		</Grid.ColumnDefinitions>
		<Grid.RowDefinitions>
			<RowDefinition Height="10" />
			<RowDefinition Height="auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="auto" />
			<RowDefinition Height="auto" />
			<RowDefinition Height="auto" />
			<RowDefinition Height="auto" />
			<RowDefinition Height="10" />
		</Grid.RowDefinitions>
		
		<!-- Row 1 -->
		<StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="1">
			<TextBlock Height="29" HorizontalAlignment="Left" VerticalAlignment="Top"
				Margin="10,10,0,10"
          FontSize="24" FontWeight="Bold" Foreground="Black" 
          Text="SPECKLE" TextWrapping="Wrap" />
			<TextBlock Height="29" HorizontalAlignment="Left" VerticalAlignment="Top"
					Margin="0,10,10,10"
          FontSize="24" FontWeight="Regular" Foreground="Black" 
          Text="GSA" TextWrapping="Wrap" />
		</StackPanel>

		<StackPanel Orientation="Vertical" Grid.Row="1" Grid.Column="2" 
								DataContext="{Binding Account}"
								VerticalAlignment="Center">
			<StackPanel.Resources>
				<Style TargetType="TextBlock">
					<Setter Property="FontSize" Value="10"/>
				</Style>
			</StackPanel.Resources>
			<TextBlock Text="{Binding Summary, Mode=OneWay}"/>
			<TextBlock Text="{Binding ServerUrl, Mode=OneWay}"/>
		</StackPanel>

		<Button Grid.Column="3" Grid.Row="1" x:Name="ConnectToServer" Padding="10 5" Content="Manage Accounts" Margin="5"
						Command="{Binding ConnectToServerCommand}"/>

		<TabControl Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="3" x:Name="MainTabControl" 
								SelectedIndex="{Binding SelectedTabIndex}"
                Style="{StaticResource MaterialDesignTabControl}">
			<!-- Server tab -->
			<TabItem x:Name="Server">
				<TabItem.Header>
					<StackPanel Orientation="Vertical">
						<TextBlock Text="Server" />
					</StackPanel>
				</TabItem.Header>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="*"/>
						<RowDefinition Height="auto"/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<DataGrid Grid.Row="0" Grid.ColumnSpan="2"
							AutoGenerateColumns="False" IsReadOnly="True" CanUserSortColumns="False"
							SelectionMode="Extended" RowHeaderWidth="0"	GridLinesVisibility="None"
							ItemsSource="{Binding ServerStreamListItems}" SelectedItem="{Binding SelectedStreamItem}">
						<DataGrid.Columns>
							<DataGridTextColumn Header="StreamName" Width="*" Binding="{Binding StreamName}" />
							<DataGridTextColumn Header="StreamId" Width="*" Binding="{Binding StreamId}"/>
						</DataGrid.Columns>
						<DataGrid.ContextMenu>
							<ContextMenu>
                <MenuItem Header="Copy streamId" Command="{Binding CopyStreamIdCommand}" CommandParameter="Server"/>
								<Separator />
                <MenuItem Header="View stream" Command="{Binding ViewStreamCommand}" CommandParameter="Server"/>
              </ContextMenu>
						</DataGrid.ContextMenu>
						<DataGrid.CellStyle>
							<Style    TargetType="DataGridCell"
                  BasedOn="{StaticResource {x:Type DataGridCell}}">
								<Setter Property="BorderThickness" Value="0"/>
								<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
							</Style>
						</DataGrid.CellStyle>
					</DataGrid>
					<Button Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" Content="Update Stream list" 
									Padding="10 5" Margin="10" 
									Command="{Binding UpdateStreamListCommand}"/>
					<Button Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Content="Receive Selected Stream" 
									Padding="10 5" Margin="10" 
									Command="{Binding ReceiveSelectedStreamCommand}"/>
				</Grid>
			</TabItem>
			<!-- GSA tab -->
			<TabItem x:Name="GSA">
				<TabItem.Header>
					<StackPanel Orientation="Vertical">
						<TextBlock Text="GSA" />
					</StackPanel>
				</TabItem.Header>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="auto"/>
						<RowDefinition Height="auto"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<Button Grid.Row="0" Content="New File" Padding="10 5" Margin="5 10 5 5" Command="{Binding NewFileCommand}"/>
          <Button Grid.Row="1" Content="Open File" Padding="10 5" Margin="5 5 5 10" Command="{Binding OpenFileCommand}" />
					<StackPanel Grid.Row="2" VerticalAlignment="Center">
						<TextBlock Text="{Binding CurrentlyOpenFileName, Mode=OneWay}" Margin="5" />
						<Button Content="Save File" Padding="5" Margin="10 5" HorizontalAlignment="Left" 
										Command="{Binding SaveFileCommand}"/>
          </StackPanel>
				</Grid>
			</TabItem>
			<!-- Sender tab -->
			<TabItem x:Name="Sender">
				<TabItem.Header>
					<StackPanel Orientation="Vertical">
						<TextBlock Text="Sender" />
					</StackPanel>
				</TabItem.Header>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="auto"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
          <Grid Grid.Row="0" >
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="auto"/>
              <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <!-- play button | option labels | radio option col 1 | radio option col 2 -->
            <Button Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Content="{Binding SendButtonText}" VerticalAlignment="Center" Padding="5"
										Command="{Binding SendStopCommand}" Margin="5"/>
						<TextBlock Grid.Row="0" Grid.Column="1" Text="Layer to stream:" HorizontalAlignment="Right" Padding="5" Margin="5"/>
            <RadioButton Grid.Row="0" Grid.Column="2" GroupName="SendLayer" Content="Design" Padding="5" VerticalContentAlignment="Center"
												 IsChecked="{Binding Path=SendLayer, Converter={StaticResource EnumConverter}, ConverterParameter=Design}" Margin="5"/>
            <RadioButton Grid.Row="0" Grid.Column="3" GroupName="SendLayer" Content="Both" Padding="5" VerticalContentAlignment="Center"
												 IsChecked="{Binding Path=SendLayer, Converter={StaticResource EnumConverter}, ConverterParameter=Both}" Margin="5"/>
            <!--
            <RadioButton Grid.Row="1" Grid.Column="2" GroupName="SendStreamMethod" Content="Continuous" Padding="5" VerticalContentAlignment="Center"
												 IsChecked="{Binding Path=SendStreamMethod, Converter={StaticResource EnumConverter}, ConverterParameter=Continuous}" Margin="5"/>
            <RadioButton Grid.Row="1" Grid.Column="3" GroupName="SendStreamMethod" Content="Single" Padding="5" VerticalContentAlignment="Center"
												 IsChecked="{Binding Path=SendStreamMethod, Converter={StaticResource EnumConverter}, ConverterParameter=Single}" Margin="5"/>
            <TextBlock Grid.Row="1" Grid.Column="1" Text="Streaming method:" HorizontalAlignment="Right" Padding="5" Margin="5"/>
            -->
          </Grid>
          <!-- Stream list -->
					<DataGrid Grid.Row="1"
							CanUserSortColumns="False" AutoGenerateColumns="False" CanUserDeleteRows="True"
							SelectionMode="Extended" RowHeaderWidth="0"	GridLinesVisibility="None"
							ItemsSource="{Binding SenderStreamListItems}" SelectedItem="{Binding SelectedSenderStreamItem}"
							IsEnabled="{Binding IsSendStreamListEnabled}">
            <DataGrid.InputBindings>
              <KeyBinding Key="Delete" Command="{Binding RemoveStreamCommand}" />
            </DataGrid.InputBindings>
            <DataGrid.Columns>
							<!-- start trial of editable column -->
							<DataGridTemplateColumn Header="StreamName" Width="*">
                <DataGridTemplateColumn.CellTemplate>
                    <DataTemplate>
										<TextBlock Text="{Binding StreamName}" />
                    </DataTemplate>
                </DataGridTemplateColumn.CellTemplate>
								<DataGridTemplateColumn.CellEditingTemplate>
									<DataTemplate>
										<TextBox x:Name="Candidate" Text="{Binding StreamName}" >
											<b:Interaction.Behaviors>
												<localUtilities:TextBoxEnterKeyUpdateBehaviour />
											</b:Interaction.Behaviors>
											<b:Interaction.Triggers>
                        <localUtilities:EnterKeyDownEventTrigger EventName="KeyDown">
                          <b:InvokeCommandAction Command="{Binding DataContext.RenameStreamCommand, RelativeSource={RelativeSource AncestorType=DataGrid}}" 
																									 CommandParameter="{Binding ElementName=Candidate, Path=Text}"/>
                        </localUtilities:EnterKeyDownEventTrigger>
                      </b:Interaction.Triggers>
										</TextBox>
									</DataTemplate>
								</DataGridTemplateColumn.CellEditingTemplate>
							</DataGridTemplateColumn>
							<!-- end	-->
							<DataGridTextColumn Header="StreamId" Width="*" IsReadOnly="True" Binding="{Binding StreamId, Mode=OneWay}"/>
						</DataGrid.Columns>
						<DataGrid.ContextMenu>
							<ContextMenu>
                <MenuItem Header="Copy streamId" Command="{Binding CopyStreamIdCommand}" CommandParameter="Sender" />
								<Separator />
                <MenuItem Header="View stream" Command="{Binding ViewStreamCommand}" CommandParameter="Sender" />
							</ContextMenu>
						</DataGrid.ContextMenu>
						<DataGrid.CellStyle>
							<Style    TargetType="DataGridCell"
                  BasedOn="{StaticResource {x:Type DataGridCell}}">
								<Setter Property="BorderThickness" Value="0"/>
								<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
							</Style>
						</DataGrid.CellStyle>
					</DataGrid>
				</Grid>
			</TabItem>
			<!-- Receiver tab -->
			<TabItem x:Name="Receiver">
				<TabItem.Header>
					<StackPanel Orientation="Vertical">
						<TextBlock Text="Receiver" />
					</StackPanel>
				</TabItem.Header>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
					<Grid.RowDefinitions>
						<RowDefinition Height="auto"/>
						<RowDefinition Height="auto"/>
						<RowDefinition Height="*"/>
					</Grid.RowDefinitions>
					<Grid Grid.Row="0" >
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="auto"/>
							<ColumnDefinition Width="auto"/>
							<ColumnDefinition Width="auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="auto"/>
							<RowDefinition Height="auto"/>
						</Grid.RowDefinitions>
						<!-- play button | option labels | radio option col 1 | radio option col 2 -->
						<Button Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Content="{Binding ReceiveButtonText}" VerticalAlignment="Center" Padding="5"
										Margin="5" Command="{Binding ReceiveStopCommand}"/>
            <!--
            <TextBlock Grid.Row="0" Grid.Column="1" Text="Layer to stream:" HorizontalAlignment="Right" Padding="5" Margin="5"/>
            <RadioButton Grid.Row="0" Grid.Column="2" GroupName="ReceiveLayer" Content="Design" Padding="5" VerticalContentAlignment="Center"
												 IsChecked="{Binding Path=ReceiveLayer, Converter={StaticResource EnumConverter}, ConverterParameter=Design}" Margin="5"/>
						<RadioButton Grid.Row="0" Grid.Column="3" GroupName="ReceiveLayer" Content="Analysis" Padding="5" VerticalContentAlignment="Center"
												 IsChecked="{Binding Path=ReceiveLayer, Converter={StaticResource EnumConverter}, ConverterParameter=Analysis}" Margin="5"/>
						<RadioButton Grid.Row="1" Grid.Column="2" GroupName="ReceiveStreamMethod" Content="Continuous" Padding="5" VerticalContentAlignment="Center"
												 IsChecked="{Binding Path=ReceiveStreamMethod, Converter={StaticResource EnumConverter}, ConverterParameter=Continuous}" Margin="5"/>
						<RadioButton Grid.Row="1" Grid.Column="3" GroupName="ReceiveStreamMethod" Content="Single" Padding="5" VerticalContentAlignment="Center"
												 IsChecked="{Binding Path=ReceiveStreamMethod, Converter={StaticResource EnumConverter}, ConverterParameter=Single}" Margin="5"/>
            <TextBlock Grid.Row="1" Grid.Column="1" Text="Streaming method:" HorizontalAlignment="Right" Padding="5" Margin="5" />
            -->
          </Grid>
					<Grid Grid.Row="1">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="auto"/>
							<ColumnDefinition Width="auto"/>
							<ColumnDefinition Width="auto"/>
						</Grid.ColumnDefinitions>
						<TextBox Text="{Binding CandidateStreamId, Mode=TwoWay}" Grid.Column="0" VerticalContentAlignment="Center" Padding="5" Margin="5"/>
						<Button Grid.Column="1" Content="Add Receiver" Padding="10 5" Margin="5"
										Command="{Binding AddCandidateStreamIdCommand}"/>
						<Button Grid.Column="2" Content="Paste Clipboard" Padding="10 5" Margin="5"
										Command="{Binding PasteClipboardCommand}"/>
						<Button Grid.Column="3" Width="auto" Content="Clear All" Padding="10 5" Margin="5"
										Command="{Binding ClearReceiveStreamListCommand}"/>
					</Grid>
					<!-- Stream list -->
					<DataGrid Grid.Row="2"
							CanUserSortColumns="False" AutoGenerateColumns="False" IsReadOnly="True"
							SelectionMode="Extended" RowHeaderWidth="0"	GridLinesVisibility="None"
							ItemsSource="{Binding ReceiverStreamListItems}" SelectedItem="{Binding SelectedReceiverStreamItem}">
						<DataGrid.Columns>
							<DataGridTextColumn Header="StreamName" Width="*" Binding="{Binding StreamName}" />
							<DataGridTextColumn Header="StreamId" Width="*" Binding="{Binding StreamId}"/>
						</DataGrid.Columns>
						<DataGrid.ContextMenu>
							<ContextMenu>
                <MenuItem Header="Copy streamId" Command="{Binding CopyStreamIdCommand}" CommandParameter="Receiver" />
								<Separator />
                <MenuItem Header="View stream" Command="{Binding ViewStreamCommand}" CommandParameter="Receiver" />
              </ContextMenu>
						</DataGrid.ContextMenu>
						<DataGrid.CellStyle>
							<Style    TargetType="DataGridCell"
                  BasedOn="{StaticResource {x:Type DataGridCell}}">
								<Setter Property="BorderThickness" Value="0"/>
								<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
							</Style>
						</DataGrid.CellStyle>
					</DataGrid>
				</Grid>
			</TabItem>
			<!-- Settings tab -->
			<TabItem x:Name="Settings">
				<TabItem.Header>
					<StackPanel Orientation="Vertical">
						<TextBlock Text="Settings" />
					</StackPanel>
				</TabItem.Header>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>
          <StackPanel Grid.Column="0" Orientation="Vertical">
            <GroupBox Header="Sender" Margin="5">
              <StackPanel Orientation="Vertical" Margin="5">
                <CheckBox Content="Send only meaningful nodes" IsChecked="{Binding SendMeaningfulNodes}" Margin="0 5" />
                <UniformGrid Columns="2">
                  <TextBlock DockPanel.Dock="Left" Text="Polling Rate:" VerticalAlignment="Center" Margin="0 5" />
                  <TextBox Text="{Binding PollingRate}" VerticalContentAlignment="Center"/>
                </UniformGrid>
                <RadioButton GroupName="StreamContentConfig" Content="Send model(s) with no results" Padding="5" VerticalContentAlignment="Center"
												 IsChecked="{Binding Path=StreamContentConfig, Converter={StaticResource EnumConverter}, ConverterParameter=ModelOnly}"/>
                <RadioButton GroupName="StreamContentConfig" Content="Send model(s) with results" Padding="5" VerticalContentAlignment="Center"
												 IsChecked="{Binding Path=StreamContentConfig, Converter={StaticResource EnumConverter}, ConverterParameter=ModelAndResults}"/>
              </StackPanel>
            </GroupBox>
            <GroupBox Header="Receiver" Margin="5">
              <StackPanel Margin="5">
                <DockPanel LastChildFill="True">
                  <TextBlock DockPanel.Dock="Left" Text="Coincident Node Allowance: " Margin="0 5"/>
                  <TextBox Text="{Binding CoincidentNodeAllowance}" VerticalContentAlignment="Center"/>
                </DockPanel>
                <UniformGrid Columns="2">
                  <TextBlock Text="Distance units: " Margin="0 5"/>
                  <ComboBox ItemsSource="{Binding CoincidentNodeAllowanceUnitOptions}" SelectedValue="{Binding CoincidentNodeAllowanceUnit}" 
														VerticalContentAlignment="Center"/>
                </UniformGrid>
                                <UniformGrid Columns="2">
                                    <TextBlock Text="Mapping stream: " Margin="0 5"/>
                                    <ComboBox ItemsSource="{Binding MappingStreamOptions}" SelectedValue="{Binding MappingStream}" 
														VerticalContentAlignment="Center"/>
                                </UniformGrid>
                            </StackPanel>
            </GroupBox>
            <GroupBox Header="Logging" Margin="5">
              <UniformGrid Columns="2" >
                <TextBlock Text="Minimum level: " Margin="0 5"/>
                <ComboBox ItemsSource="{Binding LoggingMinimumLevelOptions}" SelectedValue="{Binding LoggingMinimumLevel}" 
													VerticalContentAlignment="Center"/>
              </UniformGrid>
            </GroupBox>
          </StackPanel>
          <GroupBox Header="Results" Grid.Column="1" Margin="5">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="auto"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<StackPanel Grid.Row="0" Orientation="Vertical" Margin="5">
								<DockPanel LastChildFill="True">
									<TextBlock DockPanel.Dock="Left" Text="Cases: " Margin="0 5 5 5" />
									<TextBox Text="{Binding CasesDescription, Mode=OneWayToSource}"/>
								</DockPanel>
								<CheckBox Content="Results in local axis" IsChecked="{Binding SendMeaningfulNodes}" Margin="0 5"/>
								<DockPanel>
									<TextBlock DockPanel.Dock="Left" Text="Additional Positions for 1D elements:" VerticalAlignment="Center" Margin="0 5 5 5"/>
									<TextBox Text="{Binding Additional1DPositions}"/>
								</DockPanel>
							</StackPanel>
							<ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
								<ItemsControl ItemsSource="{Binding ResultSettingItems}" >
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<CheckBox Content="{Binding Name}" IsChecked="{Binding Selected}" />
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</ScrollViewer>
						</Grid>
					</GroupBox>
				</Grid>
			</TabItem>
		</TabControl>

    <TextBlock Grid.Row="3" Grid.Column="1" Text="Message log" Margin="5" FontWeight="Bold" />
    <ListBox Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="3" Height="120" SelectionMode="Extended" 
						 ItemsSource="{Binding DisplayLogLines}"
             Style="{StaticResource MaterialDesignListBox}"/>
    <TextBlock x:Name="State" Text="{Binding StateSummary, Mode=OneWay}" Grid.Row="5" Grid.Column="1" 
							 Grid.ColumnSpan="3" HorizontalAlignment="Center" Margin="5	" />
    <ProgressBar x:Name="MainProgressBar" Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="3" Height="10" Minimum="0" Maximum="100"
								 Foreground="Blue" Value="{Binding ProcessingProgress, Mode=OneWay}" />
  </Grid>
</Window>

	